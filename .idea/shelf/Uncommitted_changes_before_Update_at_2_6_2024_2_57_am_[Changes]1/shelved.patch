Index: app/src/main/java/sg/edu/np/mad/p04_team4/User_events.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.p04_team4;\r\n\r\nimport java.io.Serializable;\r\n\r\npublic class User_events implements Serializable {\r\n    public boolean challange_e;\r\n    String challange;\r\n    public boolean milestone_e;\r\n    public boolean goals_e;\r\n\r\n\r\n    public User_events(boolean challange,boolean milestone,boolean goals,String challange_info) {\r\n        this.challange_e=challange;\r\n        this.milestone_e = milestone;\r\n        this.goals_e=goals;\r\n        this.challange=challange_info;\r\n    }\r\n    public User_events() {\r\n        this.challange_e=false;\r\n        this.milestone_e = false;\r\n        this.goals_e=false;\r\n        this.challange=\"nuhuh\";\r\n    }\r\n    public User_events(boolean challange,boolean milestone,boolean goals) {\r\n        this.challange_e=challange;\r\n        this.milestone_e = milestone;\r\n        this.goals_e=goals;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/p04_team4/User_events.java b/app/src/main/java/sg/edu/np/mad/p04_team4/User_events.java
--- a/app/src/main/java/sg/edu/np/mad/p04_team4/User_events.java	
+++ b/app/src/main/java/sg/edu/np/mad/p04_team4/User_events.java	
@@ -3,28 +3,36 @@
 import java.io.Serializable;
 
 public class User_events implements Serializable {
+    public int id;
     public boolean challange_e;
-    String challange;
     public boolean milestone_e;
     public boolean goals_e;
+    String challange;
+    String milestone;
+    String goals;
 
 
-    public User_events(boolean challange,boolean milestone,boolean goals,String challange_info) {
+    public User_events(int id,boolean challange,boolean milestone,boolean goals,String challange_info, String milestone_info,String goals_info) {
+        this.id=id;
         this.challange_e=challange;
         this.milestone_e = milestone;
         this.goals_e=goals;
         this.challange=challange_info;
+        this.milestone=milestone_info;
+        this.goals=goals_info;
     }
-    public User_events() {
+    public User_events(int id) {
+        this.id=id;
         this.challange_e=false;
         this.milestone_e = false;
         this.goals_e=false;
-        this.challange="nuhuh";
     }
-    public User_events(boolean challange,boolean milestone,boolean goals) {
+    public User_events(int id,boolean challange,boolean milestone,boolean goals) {
+        this.id=id;
         this.challange_e=challange;
         this.milestone_e = milestone;
         this.goals_e=goals;
     }
 
+
 }
Index: app/src/main/java/sg/edu/np/mad/p04_team4/TEST.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/p04_team4/TEST.java b/app/src/main/java/sg/edu/np/mad/p04_team4/events_input.java
rename from app/src/main/java/sg/edu/np/mad/p04_team4/TEST.java
rename to app/src/main/java/sg/edu/np/mad/p04_team4/events_input.java
--- a/app/src/main/java/sg/edu/np/mad/p04_team4/TEST.java	
+++ b/app/src/main/java/sg/edu/np/mad/p04_team4/events_input.java	
@@ -9,10 +9,11 @@
 import androidx.core.view.WindowInsetsCompat;
 import com.google.android.material.textfield.TextInputEditText;
 import android.content.Intent;
+import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 
-public class TEST extends AppCompatActivity {
+public class events_input extends AppCompatActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -24,25 +25,64 @@
             v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
             return insets;
         });
-
-        Intent set_challange = getIntent();
-        User user = (User) set_challange    .getSerializableExtra("user");
         TextInputEditText Text = findViewById(R.id.input);
         Button enter = findViewById(R.id.button);
-        String text2 = Text.getText().toString();
+
+
+
+        Intent set_events= getIntent();
+        int userid= set_events.getIntExtra("userid",1);
+        String actionPerformed = set_events.getStringExtra("ACTION_PERFORMED");
+
+        events_dbhelper dbHelper = new events_dbhelper(this);
+        User_events userEvents = dbHelper.getUserEvent(userid);
         enter.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+                String text2 = Text.getText().toString();
+                Log.d("TEST", "Case: " + actionPerformed);
+
+                switch (actionPerformed) {
+                    case "CHALLENGES":
+                        dbHelper.updateEventPart(userid, "COLUMN_CHALLENGES", text2);
+                        dbHelper.updateEventPart(userid, "COLUMN_C_EMPTY", "0");
+                        Log.d("TEST", "test_challenge: " + userEvents.challange_e);
+                        Log.d("TEST", "test_challenge_content: " + userEvents.challange);
+
+                        break;
+                    case "MILESTONES":
+                        dbHelper.updateEventPart(userid, "COLUMN_MILESTONES", text2);
+                        dbHelper.updateEventPart(userid, "COLUMN_M_EMPTY", "0");
+                        Log.d("TEST", "test_milestone: " + userEvents.milestone_e);
+                        Log.d("TEST", "test_milestone_content: " + userEvents.milestone);
+                        break;
+                    case "GOALS":
+                        dbHelper.updateEventPart(userid, "COLUMN_GOALS", text2);
+                        dbHelper.updateEventPart(userid, "COLUMN_G_EMPTY", "0");
+                        Log.d("TEST", "test_goal: " + userEvents.goals_e);
+                        Log.d("TEST", "test_goal_content: " + userEvents.goals);
+                        break;
+                    default:
+                        // Handle default case or error
+                        break;
+                }
+
+                Log.d("TEST", "text_raw: "+ text2);
+
+                Intent challange_made= new Intent(events_input.this,Friendship_Events.class);
+                challange_made.putExtra("user", userid);
+
+
+
 
-                Intent challange_made= new Intent(TEST.this,Friendship_Events.class);
-                user.events.challange_e=false;
-                challange_made.putExtra("user", user);
-                challange_made.putExtra("challange",text2);
+
                 startActivity(challange_made);
+
             }
         });
     }
 
 
 
+
 }
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/p04_team4/Friendship_Events.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.p04_team4;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport android.text.Html;\r\n\r\n\r\nimport androidx.core.content.ContextCompat;\r\n\r\npublic class Friendship_Events extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_friendship_events);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n        final User user;\r\n        String challenge=\"\";\r\n\r\n\r\n        Intent challange_made = getIntent();\r\n        if (challange_made.hasExtra(\"user\") && challange_made.hasExtra(\"challange\")) {\r\n            // Retrieve the user and challenge from the intent\r\n            User_events userEvents = new User_events(false,true,true);\r\n            user = (User) challange_made.getSerializableExtra(\"user\");\r\n            user.events=userEvents;\r\n            challenge = (String) challange_made.getSerializableExtra(\"text2\");\r\n\r\n        }\r\n        else\r\n        {\r\n            User_events userEvents = new User_events(true,true,true);\r\n            user = new User(\"John Doe\", \"MAD Developer\" ,1,true,userEvents);\r\n        }\r\n        Button b1 = findViewById(R.id.button1);\r\n        Button b2 = findViewById(R.id.button2);\r\n        Button b3 = findViewById(R.id.button3);\r\n        Button b4 = findViewById(R.id.button4);\r\n\r\n        User_events events = user.events;\r\n\r\n        boolean challange_empty = events.challange_e;\r\n        boolean milestone_empty = events.milestone_e;\r\n        boolean goals_empty = events.goals_e;\r\n\r\n\r\n\r\n\r\n        if(challange_empty){\r\n            String buttonText = \"<b>No challenge set yet!</b><br><br>Click here to set it for yourself or friends\";\r\n            b1.setText(Html.fromHtml(buttonText));\r\n            b1.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    Intent set_challange= new Intent(Friendship_Events.this, TEST.class);\r\n                    set_challange.putExtra(\"user\", user);\r\n                    startActivity(set_challange);\r\n                }\r\n            });\r\n        }\r\n        else if(!challange_empty){\r\n            int color = ContextCompat.getColor(this, R.color.teal_700);\r\n            b1.setBackgroundColor(color);\r\n            b1.setText(\"challenge change this later though\");\r\n            //get challange information and display\r\n\r\n        }\r\n        if(milestone_empty){\r\n            String buttonText = \"<b>No milestone set yet!</b><br><br>Click here to set it for yourself or friends\";\r\n            b2.setText(Html.fromHtml(buttonText));\r\n        }\r\n        else if(!milestone_empty){\r\n\r\n\r\n        }\r\n        if(goals_empty){\r\n            String buttonText = \"<b>No goals set yet!</b><br><br>Click here to set it for yourself and friends\";\r\n            b3.setText(Html.fromHtml(buttonText));\r\n        }\r\n        else if(!goals_empty){\r\n\r\n\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/p04_team4/Friendship_Events.java b/app/src/main/java/sg/edu/np/mad/p04_team4/Friendship_Events.java
--- a/app/src/main/java/sg/edu/np/mad/p04_team4/Friendship_Events.java	
+++ b/app/src/main/java/sg/edu/np/mad/p04_team4/Friendship_Events.java	
@@ -2,6 +2,7 @@
 
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 
@@ -27,70 +28,87 @@
             v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
             return insets;
         });
-        final User user;
-        String challenge="";
-
-
-        Intent challange_made = getIntent();
-        if (challange_made.hasExtra("user") && challange_made.hasExtra("challange")) {
-            // Retrieve the user and challenge from the intent
-            User_events userEvents = new User_events(false,true,true);
-            user = (User) challange_made.getSerializableExtra("user");
-            user.events=userEvents;
-            challenge = (String) challange_made.getSerializableExtra("text2");
-
-        }
-        else
-        {
-            User_events userEvents = new User_events(true,true,true);
-            user = new User("John Doe", "MAD Developer" ,1,true,userEvents);
-        }
         Button b1 = findViewById(R.id.button1);
         Button b2 = findViewById(R.id.button2);
         Button b3 = findViewById(R.id.button3);
         Button b4 = findViewById(R.id.button4);
 
-        User_events events = user.events;
+        Intent friendship_events= getIntent();
+        events_dbhelper dbHelper = new events_dbhelper(this);
+        int userid= (int) friendship_events.getIntExtra("userid",0);
 
-        boolean challange_empty = events.challange_e;
-        boolean milestone_empty = events.milestone_e;
-        boolean goals_empty = events.goals_e;
+        User_events userEvents = dbHelper.getUserEvent(userid);
+        boolean challengeEmpty=userEvents.challange_e;
+        boolean milestoneEmpty = userEvents.milestone_e;
+        boolean goalsEmpty = userEvents.goals_e;
+        Log.d("TEST", "fs_challenge: "+ challengeEmpty);
+        Log.d("TEST", "fs_milestone: "+ milestoneEmpty);
+        Log.d("TEST", "fs_goals: "+ goalsEmpty);
 
 
 
 
-        if(challange_empty){
+
+        if(challengeEmpty){
             String buttonText = "<b>No challenge set yet!</b><br><br>Click here to set it for yourself or friends";
             b1.setText(Html.fromHtml(buttonText));
             b1.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-                    Intent set_challange= new Intent(Friendship_Events.this, TEST.class);
-                    set_challange.putExtra("user", user);
-                    startActivity(set_challange);
+                    Intent set_event= new Intent(Friendship_Events.this, events_input.class);
+                    set_event.putExtra("userid", userid);
+                    set_event.putExtra("ACTION_PERFORMED", "CHALLENGES");
+                    startActivity(set_event);
                 }
             });
         }
-        else if(!challange_empty){
+        else if(!challengeEmpty){
             int color = ContextCompat.getColor(this, R.color.teal_700);
             b1.setBackgroundColor(color);
-            b1.setText("challenge change this later though");
-            //get challange information and display
+            String challengeInfo = "<b>Challenge set!</b><br><br>" + userEvents.challange;
+            b1.setText(Html.fromHtml(challengeInfo));
 
         }
-        if(milestone_empty){
+        if(milestoneEmpty){
             String buttonText = "<b>No milestone set yet!</b><br><br>Click here to set it for yourself or friends";
             b2.setText(Html.fromHtml(buttonText));
+            b2.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    Intent set_event= new Intent(Friendship_Events.this, events_input.class);
+                    set_event.putExtra("userid", userid);
+                    set_event.putExtra("ACTION_PERFORMED", "MILESTONES");
+                    startActivity(set_event);
+                }
+            });
         }
-        else if(!milestone_empty){
+        else if(!milestoneEmpty){
+            int color = ContextCompat.getColor(this, R.color.teal_700);
+            b2.setBackgroundColor(color);
+            String challengeInfo = "<b>Challenge set!</b><br><br>" + userEvents.milestone;
+            b2.setText(Html.fromHtml(challengeInfo));
+
 
 
         }
-        if(goals_empty){
+        if(goalsEmpty){
             String buttonText = "<b>No goals set yet!</b><br><br>Click here to set it for yourself and friends";
             b3.setText(Html.fromHtml(buttonText));
+            b3.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    Intent set_event= new Intent(Friendship_Events.this, events_input.class);
+                    set_event.putExtra("userid", userid);
+                    set_event.putExtra("ACTION_PERFORMED", "GOALS");
+                    startActivity(set_event);
+                }
+            });
         }
-        else if(!goals_empty){
+        else if(!goalsEmpty){
+            int color = ContextCompat.getColor(this, R.color.teal_700);
+            b3.setBackgroundColor(color);
+            String challengeInfo = "<b>Challenge set!</b><br><br>" + userEvents.goals;
+            b3.setText(Html.fromHtml(challengeInfo));
 
 
         }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-permission android:name=\"android.permission.VIBRATE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.P04_Team4\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".TimerLogActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Stopwatch_Timer\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Friendship_Events\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".TEST\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -24,7 +24,7 @@
             android:name=".Friendship_Events"
             android:exported="false" />
         <activity
-            android:name=".TEST"
+            android:name=".events_input"
             android:exported="false" />
         <activity
             android:name=".MainActivity"
Index: app/src/main/res/layout/activity_test.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".TEST\">\r\n\r\n\r\n    <com.google.android.material.textfield.TextInputEditText\r\n        android:id=\"@+id/input\"\r\n        android:layout_width=\"405dp\"\r\n        android:layout_height=\"106dp\"\r\n        android:layout_marginTop=\"323dp\"\r\n        android:hint=\"create challange here!\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"16dp\"\r\n        android:layout_marginTop=\"46dp\"\r\n        android:text=\"Button\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/input\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_test.xml b/app/src/main/res/layout/activity_test.xml
--- a/app/src/main/res/layout/activity_test.xml	
+++ b/app/src/main/res/layout/activity_test.xml	
@@ -5,7 +5,7 @@
     android:id="@+id/main"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".TEST">
+    tools:context=".events_input">
 
 
     <com.google.android.material.textfield.TextInputEditText
Index: app/src/main/java/sg/edu/np/mad/p04_team4/events_dbhelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/p04_team4/events_dbhelper.java b/app/src/main/java/sg/edu/np/mad/p04_team4/events_dbhelper.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/sg/edu/np/mad/p04_team4/events_dbhelper.java	
@@ -0,0 +1,174 @@
+package sg.edu.np.mad.p04_team4;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteException;
+import android.database.sqlite.SQLiteOpenHelper;
+
+import java.util.ArrayList;
+import android.util.Log;
+public class events_dbhelper extends SQLiteOpenHelper {
+    private static final int DATABASE_VERSION = 1;
+    private static final String DATABASE_NAME = "user_events.db";
+    public static final String TABLE_NAME = "event_info";
+    private static final String USERID = "userid";
+    private static final String COLUMN_CHALLENGES = "challenges";
+    private static final String COLUMN_MILESTONES = "milestones";
+    private static final String COLUMN_GOALS = "goals";
+    private static final String COLUMN_C_EMPTY = "c_empty";
+    private static final String COLUMN_M_EMPTY = "m_empty";
+    private static final String COLUMN_G_EMPTY = "g_empty";
+
+    // Constructor
+    public events_dbhelper(Context context) {
+        super(context, DATABASE_NAME, null, DATABASE_VERSION);
+    }
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        String CREATE_TABLE_QUERY = "CREATE TABLE " + TABLE_NAME + " ("
+                + USERID + " INTEGER PRIMARY KEY,"
+                + COLUMN_CHALLENGES + " TEXT,"
+                + COLUMN_MILESTONES + " TEXT,"
+                + COLUMN_GOALS + " TEXT,"
+                + COLUMN_C_EMPTY + " INTEGER,"  // Boolean column for challenges
+                + COLUMN_M_EMPTY + " INTEGER,"  // Boolean column for milestones
+                + COLUMN_G_EMPTY + " INTEGER)"; // Boolean column for goals
+        db.execSQL(CREATE_TABLE_QUERY);
+    }
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
+        onCreate(db);
+    }
+    public void insertEvent(int userId, String challenges, String milestones, String goals, int cEmpty, int mEmpty, int gEmpty) {
+        SQLiteDatabase db = this.getWritableDatabase();
+        ContentValues values = new ContentValues();
+        values.put(USERID, userId);
+        values.put(COLUMN_CHALLENGES, challenges);
+        values.put(COLUMN_MILESTONES, milestones);
+        values.put(COLUMN_GOALS, goals);
+        values.put(COLUMN_C_EMPTY, cEmpty);
+        values.put(COLUMN_M_EMPTY, mEmpty);
+        values.put(COLUMN_G_EMPTY, gEmpty);
+
+        if (checkUserIdExist(userId)) {
+            // If userId exists, update the existing entry
+            db.update(TABLE_NAME, values, USERID + "=?", new String[]{String.valueOf(userId)});
+            Log.d("TEST", "Event with userId " + userId + " updated.");
+        } else {
+            // If userId doesn't exist, insert a new entry
+            db.insert(TABLE_NAME, null, values);
+            Log.d("TEST", "New event inserted with userId " + userId + ".");
+        }
+
+        // Closing database connection
+        db.close();
+    }
+
+    // Method to check if userId already exists in the table
+    private boolean checkUserIdExist(int userId) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        Cursor cursor = db.rawQuery("SELECT * FROM " + TABLE_NAME + " WHERE " + USERID + " = ?", new String[]{String.valueOf(userId)});
+        boolean exists = cursor.getCount() > 0;
+        cursor.close();
+        return exists;
+    }
+    public User_events getUserEvent(int userId) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        User_events userEvent = null;
+
+        Cursor cursor = db.query(TABLE_NAME, null, USERID + "=?", new String[]{String.valueOf(userId)}, null, null, null);
+
+        if (cursor != null) {
+            if (cursor.moveToFirst()) {
+                int userIdIndex = cursor.getColumnIndex(USERID);
+                int challengeEmptyIndex = cursor.getColumnIndex(COLUMN_C_EMPTY);
+                int milestoneEmptyIndex = cursor.getColumnIndex(COLUMN_M_EMPTY);
+                int goalEmptyIndex = cursor.getColumnIndex(COLUMN_G_EMPTY);
+                int challengeIndex = cursor.getColumnIndex(COLUMN_CHALLENGES);
+                int milestoneIndex = cursor.getColumnIndex(COLUMN_MILESTONES);
+                int goalIndex = cursor.getColumnIndex(COLUMN_GOALS);
+
+                if (userIdIndex != -1 && challengeEmptyIndex != -1 && milestoneEmptyIndex != -1 &&
+                        goalEmptyIndex != -1 && challengeIndex != -1 && milestoneIndex != -1 && goalIndex != -1) {
+                    boolean challenge_e = cursor.getInt(challengeEmptyIndex) != 0;
+                    boolean milestone_e = cursor.getInt(milestoneEmptyIndex) != 0;
+                    boolean goals_e = cursor.getInt(goalEmptyIndex) != 0;
+                    String challenge = cursor.getString(challengeIndex);
+                    String milestone = cursor.getString(milestoneIndex);
+                    String goals = cursor.getString(goalIndex);
+
+                    userEvent = new User_events(userId, challenge_e, milestone_e, goals_e, challenge, milestone, goals);
+                } else {
+                    Log.e("getUserEvent", "One or more columns not found in cursor");
+                }
+            } else {
+                Log.e("getUserEvent", "No data found for userId: " + userId);
+            }
+            cursor.close();
+        } else {
+            Log.e("getUserEvent", "Cursor is null");
+        }
+
+        db.close();
+
+        return userEvent;
+    }
+    public void updateEventPart(int userId, String columnNameLiteral, String newValue) {
+        SQLiteDatabase db = this.getWritableDatabase();
+        ContentValues values = new ContentValues();
+
+        // Map literal column name to actual column name constant
+        String columnName;
+        switch (columnNameLiteral) {
+            case "COLUMN_CHALLENGES":
+                columnName = COLUMN_CHALLENGES;
+                break;
+            case "COLUMN_MILESTONES":
+                columnName = COLUMN_MILESTONES;
+                break;
+            case "COLUMN_GOALS":
+                columnName = COLUMN_GOALS;
+                break;
+            case "COLUMN_C_EMPTY":
+                columnName = COLUMN_C_EMPTY;
+                break;
+            case "COLUMN_M_EMPTY":
+                columnName = COLUMN_M_EMPTY;
+                break;
+            case "COLUMN_G_EMPTY":
+                columnName = COLUMN_G_EMPTY;
+                break;
+            default:
+                Log.e("TEST", "Invalid column name: " + columnNameLiteral);
+                db.close();
+                return;
+        }
+
+        // Check if the column name corresponds to a boolean column
+        if (columnName.equals(COLUMN_C_EMPTY) || columnName.equals(COLUMN_M_EMPTY) || columnName.equals(COLUMN_G_EMPTY)) {
+            // If the column is a boolean column, parse the newValue string to a boolean value
+            boolean boolValue = newValue.equals("1");
+            values.put(columnName, boolValue ? 1 : 0); // Store boolean as integer (1 for true, 0 for false)
+        } else {
+            // If the column is not a boolean column, directly put the newValue string
+            values.put(columnName, newValue);
+        }
+
+        if (checkUserIdExist(userId)) {
+            // If userId exists, update the specified column with the new value
+            db.update(TABLE_NAME, values, USERID + "=?", new String[]{String.valueOf(userId)});
+            Log.d("TEST", columnName + " updated for user with userId " + userId + ".");
+        } else {
+            // If userId doesn't exist, log an error
+            Log.e("TEST", "User with userId " + userId + " does not exist. Cannot update " + columnName + ".");
+        }
+
+        // Closing database connection
+        db.close();
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/p04_team4/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.p04_team4;\r\nimport java.io.Serializable;\r\npublic class User implements Serializable{\r\n    public String name;\r\n    public String description;\r\n    public int id;\r\n    public boolean followed;\r\n    public User_events events;\r\n    public User(){}\r\n\r\n    public User(String name, String description, int id, boolean followed,User_events events) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.id = id;\r\n        this.followed = followed;\r\n        this.events = events;\r\n\r\n    }\r\n    public User(String name, String description, int id, boolean followed) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.id = id;\r\n        this.followed = followed;\r\n        this.events = new User_events(true,true,true);\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/p04_team4/User.java b/app/src/main/java/sg/edu/np/mad/p04_team4/User.java
--- a/app/src/main/java/sg/edu/np/mad/p04_team4/User.java	
+++ b/app/src/main/java/sg/edu/np/mad/p04_team4/User.java	
@@ -5,24 +5,16 @@
     public String description;
     public int id;
     public boolean followed;
-    public User_events events;
+
     public User(){}
 
-    public User(String name, String description, int id, boolean followed,User_events events) {
-        this.name = name;
-        this.description = description;
-        this.id = id;
-        this.followed = followed;
-        this.events = events;
-
-    }
     public User(String name, String description, int id, boolean followed) {
         this.name = name;
         this.description = description;
         this.id = id;
         this.followed = followed;
-        this.events = new User_events(true,true,true);
 
 
     }
+
 }
